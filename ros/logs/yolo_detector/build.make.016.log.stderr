In file included from [01m[K/home/whymatter/github.com/albatross/ros/src/yolo_detector/include/yolo_detector/yolo_detector_node.h:11:0[m[K,
                 from [01m[K/home/whymatter/github.com/albatross/ros/src/yolo_detector/src/main.cpp:8[m[K:
/home/whymatter/github.com/albatross/ros/src/alb_base/include/alb_base/alb_node.h: In instantiation of â€˜[01m[Ktypename T::Subscriber alb::base::AlbNode<T>::Subscribe(std::__cxx11::string, const boost::function<void(const boost::shared_ptr<const M>&)>&, uint32_t) [with M = cv_bridge::CvImage; T = alb::base::ros::AlbRosNodehandle; typename T::Subscriber = alb::base::ros::AlbRosSubscriber; std::__cxx11::string = std::__cxx11::basic_string<char>; uint32_t = unsigned int][m[Kâ€™:
[01m[K/home/whymatter/github.com/albatross/ros/src/yolo_detector/include/yolo_detector/yolo_detector_node.h:33:17:[m[K   required from â€˜[01m[Kalb::yolo_detector::CupDetectorNode<TNode>::CupDetectorNode(TNode&) [with TNode = alb::base::ros::AlbRosNodehandle][m[Kâ€™
[01m[K/home/whymatter/github.com/albatross/ros/src/yolo_detector/src/main.cpp:14:105:[m[K   required from here
[01m[K/home/whymatter/github.com/albatross/ros/src/alb_base/include/alb_base/alb_node.h:43:94:[m[K [01;31m[Kerror: [m[Kcould not convert â€˜[01m[K(&((alb::base::AlbNode<alb::base::ros::AlbRosNodehandle>*)this)->alb::base::AlbNode<alb::base::ros::AlbRosNodehandle>::nodeHandle_)->alb::base::ros::AlbRosNodehandle::Subscribe<cv_bridge::CvImage>(std::__cxx11::basic_string<char>(topicName), boost::function<void(const boost::shared_ptr<const cv_bridge::CvImage>&)>(boost::function<void(const boost::shared_ptr<const alb::base::ros::AlbRosNodehandle>&)>((* & callback)), 0), queueSize)[m[Kâ€™ from â€˜[01m[Kalb::base::AlbSubscriber[m[Kâ€™ to â€˜[01m[Kalb::base::ros::AlbRosNodehandle::Subscriber {aka alb::base::ros::AlbRosSubscriber}[m[Kâ€™
                 return this->nodeHandle_.template Subscribe<M>(topicName, callback, queueSize[01;31m[K)[m[K;
                                                                                              [01;31m[K^[m[K
In file included from [01m[K/usr/include/boost/function/detail/maybe_include.hpp:18:0[m[K,
                 from [01m[K/usr/include/boost/function/detail/function_iterate.hpp:14[m[K,
                 from [01m[K/usr/include/boost/preprocessor/iteration/detail/iter/forward1.hpp:52[m[K,
                 from [01m[K/usr/include/boost/function.hpp:64[m[K,
                 from [01m[K/opt/ros/melodic/include/ros/forwards.h:40[m[K,
                 from [01m[K/opt/ros/melodic/include/ros/common.h:37[m[K,
                 from [01m[K/opt/ros/melodic/include/ros/ros.h:43[m[K,
                 from [01m[K/home/whymatter/github.com/albatross/ros/src/yolo_detector/src/main.cpp:5[m[K:
/usr/include/boost/function/function_template.hpp: In instantiation of â€˜[01m[Kstatic void boost::detail::function::void_function_obj_invoker1<FunctionObj, R, T0>::invoke(boost::detail::function::function_buffer&, T0) [with FunctionObj = boost::function<void(const boost::shared_ptr<const cv_bridge::CvImage>&)>; R = void; T0 = const boost::shared_ptr<const alb::base::ros::AlbRosNodehandle>&][m[Kâ€™:
[01m[K/usr/include/boost/function/function_template.hpp:925:38:[m[K   required from â€˜[01m[Kvoid boost::function1<R, T1>::assign_to(Functor) [with Functor = boost::function<void(const boost::shared_ptr<const cv_bridge::CvImage>&)>; R = void; T0 = const boost::shared_ptr<const alb::base::ros::AlbRosNodehandle>&][m[Kâ€™
[01m[K/usr/include/boost/function/function_template.hpp:716:7:[m[K   required from â€˜[01m[Kboost::function1<R, T1>::function1(Functor, typename boost::enable_if_c<(! boost::is_integral<Functor>::value), int>::type) [with Functor = boost::function<void(const boost::shared_ptr<const cv_bridge::CvImage>&)>; R = void; T0 = const boost::shared_ptr<const alb::base::ros::AlbRosNodehandle>&; typename boost::enable_if_c<(! boost::is_integral<Functor>::value), int>::type = int][m[Kâ€™
[01m[K/usr/include/boost/function/function_template.hpp:1061:16:[m[K   required from â€˜[01m[Kboost::function<R(T0)>::function(Functor, typename boost::enable_if_c<(! boost::is_integral<Functor>::value), int>::type) [with Functor = boost::function<void(const boost::shared_ptr<const cv_bridge::CvImage>&)>; R = void; T0 = const boost::shared_ptr<const alb::base::ros::AlbRosNodehandle>&; typename boost::enable_if_c<(! boost::is_integral<Functor>::value), int>::type = int][m[Kâ€™
[01m[K/home/whymatter/github.com/albatross/ros/src/yolo_detector/include/yolo_detector/yolo_detector_node.h:33:17:[m[K   required from â€˜[01m[Kalb::yolo_detector::CupDetectorNode<TNode>::CupDetectorNode(TNode&) [with TNode = alb::base::ros::AlbRosNodehandle][m[Kâ€™
[01m[K/home/whymatter/github.com/albatross/ros/src/yolo_detector/src/main.cpp:14:105:[m[K   required from here
[01m[K/usr/include/boost/function/function_template.hpp:159:11:[m[K [01;31m[Kerror: [m[Kno match for call to â€˜[01m[K(boost::function<void(const boost::shared_ptr<const cv_bridge::CvImage>&)>) (const boost::shared_ptr<const alb::base::ros::AlbRosNodehandle>&)[m[Kâ€™
           [01;31m[KB[m[KOOST_FUNCTION_RETURN((*f)(BOOST_FUNCTION_ARGS));
           [01;31m[K^[m[K
[01m[K/usr/include/boost/function/function_template.hpp:754:17:[m[K [01;36m[Knote: [m[Kcandidate: boost::function1<R, T1>::result_type boost::function1<R, T1>::operator()(T0) const [with R = void; T0 = const boost::shared_ptr<const cv_bridge::CvImage>&; boost::function1<R, T1>::result_type = void]
     result_type [01;36m[Koperator[m[K()(BOOST_FUNCTION_PARMS) const
                 [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/boost/function/function_template.hpp:754:17:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kconst boost::shared_ptr<const alb::base::ros::AlbRosNodehandle>[m[Kâ€™ to â€˜[01m[Kconst boost::shared_ptr<const cv_bridge::CvImage>&[m[Kâ€™
/usr/include/boost/function/function_template.hpp: In instantiation of â€˜[01m[Kstatic void boost::detail::function::void_function_obj_invoker1<FunctionObj, R, T0>::invoke(boost::detail::function::function_buffer&, T0) [with FunctionObj = boost::function<void(const boost::shared_ptr<const alb::base::ros::AlbRosNodehandle>&)>; R = void; T0 = const boost::shared_ptr<const cv_bridge::CvImage>&][m[Kâ€™:
[01m[K/usr/include/boost/function/function_template.hpp:925:38:[m[K   required from â€˜[01m[Kvoid boost::function1<R, T1>::assign_to(Functor) [with Functor = boost::function<void(const boost::shared_ptr<const alb::base::ros::AlbRosNodehandle>&)>; R = void; T0 = const boost::shared_ptr<const cv_bridge::CvImage>&][m[Kâ€™
[01m[K/usr/include/boost/function/function_template.hpp:716:7:[m[K   required from â€˜[01m[Kboost::function1<R, T1>::function1(Functor, typename boost::enable_if_c<(! boost::is_integral<Functor>::value), int>::type) [with Functor = boost::function<void(const boost::shared_ptr<const alb::base::ros::AlbRosNodehandle>&)>; R = void; T0 = const boost::shared_ptr<const cv_bridge::CvImage>&; typename boost::enable_if_c<(! boost::is_integral<Functor>::value), int>::type = int][m[Kâ€™
[01m[K/usr/include/boost/function/function_template.hpp:1061:16:[m[K   required from â€˜[01m[Kboost::function<R(T0)>::function(Functor, typename boost::enable_if_c<(! boost::is_integral<Functor>::value), int>::type) [with Functor = boost::function<void(const boost::shared_ptr<const alb::base::ros::AlbRosNodehandle>&)>; R = void; T0 = const boost::shared_ptr<const cv_bridge::CvImage>&; typename boost::enable_if_c<(! boost::is_integral<Functor>::value), int>::type = int][m[Kâ€™
[01m[K/home/whymatter/github.com/albatross/ros/src/alb_base/include/alb_base/alb_node.h:43:94:[m[K   required from â€˜[01m[Ktypename T::Subscriber alb::base::AlbNode<T>::Subscribe(std::__cxx11::string, const boost::function<void(const boost::shared_ptr<const M>&)>&, uint32_t) [with M = cv_bridge::CvImage; T = alb::base::ros::AlbRosNodehandle; typename T::Subscriber = alb::base::ros::AlbRosSubscriber; std::__cxx11::string = std::__cxx11::basic_string<char>; uint32_t = unsigned int][m[Kâ€™
[01m[K/home/whymatter/github.com/albatross/ros/src/yolo_detector/include/yolo_detector/yolo_detector_node.h:33:17:[m[K   required from â€˜[01m[Kalb::yolo_detector::CupDetectorNode<TNode>::CupDetectorNode(TNode&) [with TNode = alb::base::ros::AlbRosNodehandle][m[Kâ€™
[01m[K/home/whymatter/github.com/albatross/ros/src/yolo_detector/src/main.cpp:14:105:[m[K   required from here
[01m[K/usr/include/boost/function/function_template.hpp:159:11:[m[K [01;31m[Kerror: [m[Kno match for call to â€˜[01m[K(boost::function<void(const boost::shared_ptr<const alb::base::ros::AlbRosNodehandle>&)>) (const boost::shared_ptr<const cv_bridge::CvImage>&)[m[Kâ€™
           [01;31m[KB[m[KOOST_FUNCTION_RETURN((*f)(BOOST_FUNCTION_ARGS));
           [01;31m[K^[m[K
[01m[K/usr/include/boost/function/function_template.hpp:754:17:[m[K [01;36m[Knote: [m[Kcandidate: boost::function1<R, T1>::result_type boost::function1<R, T1>::operator()(T0) const [with R = void; T0 = const boost::shared_ptr<const alb::base::ros::AlbRosNodehandle>&; boost::function1<R, T1>::result_type = void]
     result_type [01;36m[Koperator[m[K()(BOOST_FUNCTION_PARMS) const
                 [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/boost/function/function_template.hpp:754:17:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kconst boost::shared_ptr<const cv_bridge::CvImage>[m[Kâ€™ to â€˜[01m[Kconst boost::shared_ptr<const alb::base::ros::AlbRosNodehandle>&[m[Kâ€™
make[2]: *** [CMakeFiles/yolo_detector.dir/src/main.cpp.o] Error 1
make[1]: *** [CMakeFiles/yolo_detector.dir/all] Error 2
make: *** [all] Error 2
